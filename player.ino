#define SOLDAT_X 3
#define SOLDAT_START_LIFE 100

const uint16_t soldatFireData[] = {13,10,3, 3, 0xffff, 0, 0xffff,0xffff,0xffff,0x5b27,0x6b8a,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0x6203,0x52c6,0x6b8a,0x6b8a,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0x39a3,0x8b46,0xc4c9,0x83ab,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0x7bab,0x5ac6,0x49c2,0x7b07,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xf720,0xffff,0xffff,0x52a6,0x4266,0x2963,0x2963,0x3163,0x2102,0x39a3,0x4a68,0x840f,0xf720,0xffff,0xffff,0xffff,0x4a67,0x62e6,0x6285,0x2102,0x3142,0xc4c9,0xffff,0xffff,0xffff,0xffff,0xf720,0xffff,0xffff,0xffff,0x3162,0x4a04,0x4245,0x8c4f,0x6265,0xffde,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0x4aa6,0x634a,0x39c4,0x4266,0x738c,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0x5aa8,0x4a46,0xffff,0x7bcd,0x5266,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0x6203,0x6203,0xffff,0xffff,0xffff,0x51a2,0x6203,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0x5b27,0x6b8a,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffdf,0x6203,0x52c6,0x6b8a,0x6b8a,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0x39a3,0x8b46,0xc4c9,0x83ab,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0x7bab,0x5ac6,0x49c2,0x7b07,0xffff,0xffff,0xffff,0xffff,0xffff,0xf720,0xffff,0xffff,0xffff,0x52a6,0x4266,0x2963,0x2963,0x3163,0x2102,0x39a3,0x4a68,0x840f,0xffff,0xf720,0xffff,0xffff,0x4a67,0x62e6,0x6285,0x2102,0x3142,0xc4c9,0xffff,0xffff,0xffff,0xf720,0xffff,0xffff,0xffff,0xffff,0x3162,0x4a04,0x4245,0x8c4f,0x6265,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0x4aa6,0x634a,0x39c4,0x4266,0x738c,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0x5aa8,0x4a46,0xffff,0x7bcd,0x5266,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0x6203,0x6203,0xffff,0xffff,0xffff,0x51a2,0x6203,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0x5b27,0x6b8a,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0x6203,0x52c6,0x6b8a,0x6b8a,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0x39a3,0x8b46,0xc4c9,0x83ab,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0x7bab,0x5ac6,0x49c2,0x7b07,0xffff,0xffff,0xffff,0xffff,0xffff,0xf720,0xffff,0xffff,0xffff,0x52a6,0x4266,0x2963,0x2963,0x3163,0x2102,0x39a3,0x4a68,0x840f,0xffff,0xffff,0xf720,0xffff,0x4a67,0x62e6,0x6285,0x2102,0x3142,0xc4c9,0xffff,0xffff,0xffff,0xf720,0xffff,0xffff,0xffff,0xffff,0x3162,0x4a04,0x4245,0x8c4f,0x6265,0xffde,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0x4aa6,0x634a,0x39c4,0x4266,0x738c,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0x5aa8,0x4a46,0xffff,0x7bcd,0x5266,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0x6203,0x6203,0xffff,0xffff,0xffff,0x51a2,0x6203,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff};
Image soldatFire = Image(soldatFireData);

const uint16_t soldatRunData[] = {10,10,3, 3, 0xffff, 0, 0xffff,0xffff,0xffff,0xffff,0x4aa5,0x73c8,0x73cb,0xffff,0xffff,0xffff,0xffff,0x5288,0xffff,0x9c09,0x3a04,0x52a6,0x4225,0xffff,0xffff,0xffff,0xffff,0xffff,0x5288,0x5288,0x39e5,0x3a04,0x5287,0xffff,0xffff,0xffff,0xffff,0xffff,0xc4c9,0x5aa6,0x4245,0x6ba9,0x5b48,0x5aa6,0xffff,0xffff,0xffff,0xffff,0x9cd2,0x632a,0x634a,0x4a86,0x4a86,0x6369,0xffff,0xffff,0xffff,0xffff,0xffdf,0x4225,0x4225,0x2983,0x31c4,0x4225,0xffff,0xffff,0xffff,0xffff,0xffff,0x6369,0x39e4,0x3a05,0x2942,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0x20e1,0x4225,0x31c4,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0x59c2,0xffff,0x28e0,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0x4982,0xffff,0xffdf,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0x3a04,0x73c8,0x73c8,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0x3a04,0x3a04,0x52a6,0x4225,0xffff,0xffff,0xffff,0x5288,0x94b1,0xffff,0xc4c9,0x39e5,0x3a04,0x5287,0xffff,0xffff,0xffff,0xffff,0x5288,0x5288,0x5288,0x4245,0x6ba9,0x5b48,0x5aa6,0xffff,0xffff,0xffff,0xffff,0xc4c9,0x5aa6,0x634a,0x4a86,0x4a86,0x6369,0xffff,0xffff,0xffff,0xffff,0x9cd2,0x632a,0x4225,0x2983,0x31c4,0x4225,0xffff,0xffff,0xffff,0xffff,0xffdf,0x4225,0x39e4,0x3a05,0x2942,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0x20e1,0x4225,0x31c4,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0x59c2,0xffff,0x28e0,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0x59c2,0xffff,0x59c2,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0x4aa5,0x73c8,0x73cb,0xffff,0xffff,0xffff,0xffff,0x5288,0xffff,0x9c09,0x3a04,0x52a6,0x4225,0xffff,0xffff,0xffff,0xffff,0xffff,0x5288,0x5288,0x39e5,0x3a04,0x5287,0xffff,0xffff,0xffff,0xffff,0xffff,0xc4c9,0x5aa6,0x4245,0x6ba9,0x5b48,0x5aa6,0xffff,0xffff,0xffff,0xffff,0x9cd2,0x632a,0x634a,0x4a86,0x4a86,0x6369,0xffff,0xffff,0xffff,0xffff,0xffff,0x4225,0x4225,0x2983,0x31c4,0x4225,0xffff,0xffff,0xffff,0xffff,0xffff,0x6369,0x39e4,0x3a05,0x2942,0xffff,0xffff,0xffff,0xffff,0xffff,0xf7be,0xffff,0x20e1,0x4225,0x31c4,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0x4982,0xffff,0x28e0,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0x4982,0xffff,0xffff,0xffff};
Image soldatRun = Image(soldatRunData);

const uint16_t soldatIdlData[] = {10,10,1, 1, 0xffff, 0, 0xffff,0xffff,0xffff,0x5b27,0x6b8a,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0x6203,0x52c6,0x6b8a,0x6b8a,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0x39a3,0x8b46,0xc4c9,0x83ab,0xffff,0xffff,0xffff,0xffff,0xffff,0x7bab,0x5ac6,0x49c2,0x7b07,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0x52a6,0x4266,0x2963,0x2963,0x3163,0x2102,0x39a3,0x4a68,0x840f,0xffff,0x4a67,0x62e6,0x6285,0x2102,0x3142,0xc4c9,0xffff,0xffff,0xffff,0xffff,0xffff,0x3162,0x4a04,0x4245,0x8c4f,0x6265,0xffff,0xffff,0xffff,0xffff,0xffff,0x4aa6,0x634a,0x39c4,0x4266,0x738c,0xffff,0xffff,0xffff,0xffff,0x5aa8,0x4a46,0xffff,0x7bcd,0x5266,0xffff,0xffff,0xffff,0xffff,0x6203,0x6203,0xffff,0xffff,0xffff,0x51a2,0x6203,0xffff,0xffff,0xffff};
Image soldatIdl = Image(soldatIdlData);

int targetIndex = -1;

boolean collidePlayerAndBullets() 
{
  return false;
}

void initPlayer()
{
  soldat.y = 40;
  soldat.life = SOLDAT_START_LIFE;
  soldat.fire = 0;
  soldat.isRun = false;
  soldat.x = SOLDAT_X;
  targetIndex = -1;
}

void updatePlayer()
{  
  soldat.isRun = false;
  if (gb.buttons.repeat(BUTTON_UP,0)) {
    soldat.y--;
    soldat.isRun = true;
  }
  
  if (gb.buttons.repeat(BUTTON_DOWN,0)) {
    soldat.y++;
    soldat.isRun = true;
  }
   
  if (soldat.fire>0) {
    --soldat.fire;
  }
  if (soldat.fire == 0 && gb.buttons.pressed(BUTTON_A)) {
    soldat.fire = NB_FRAME_FIRE_ANIM;
    getCloserEnnemyIndex();
    shakeMagnitude = 2;
    shakeTimeLeft = 5;
  }
}

void drawPlayer()
{ 
  if(soldat.fire == NB_FRAME_FIRE_ANIM) {
    gb.lights.fill(YELLOW);
  } 
  if(soldat.fire>0) {
    drawCheckedImage( soldat.x , soldat.y , soldatFire);
    if(targetIndex>=0){ 
       gb.display.setColor(YELLOW);
       drawMitraille( soldat.x + 10 , soldat.y+ 3, ennemies[targetIndex].x+ 5, ennemies[targetIndex].y + 5);
       if(random(0,2) == 0) {
        ennemies[targetIndex].life = 0;
       }
    }
  } else if(soldat.isRun == true){
    drawCheckedImage( soldat.x , soldat.y , soldatRun);
  } else {
    drawCheckedImage( soldat.x , soldat.y , soldatIdl);
  }
}

void getCloserEnnemyIndex()
{
  targetIndex = -1;
  int dist = 99999999;
  int tmpDist = 99999999;
  for(int i = 0 ; i< NB_MAX_ENNEMIES; ++i) {
    if(ennemies[i].life > 0 && ennemies[i].x < (gb.display.width())) {
      tmpDist = pow(ennemies[i].x - soldat.x,2 ) + pow(ennemies[i].y - soldat.y, 2);
      if(dist > tmpDist) {
        dist = tmpDist;
        targetIndex = i;
      }
    }
  }
}

