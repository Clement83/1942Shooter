
const uint16_t ennemyFireData[] = {12,7,2, NB_FRAME_FIRE_ANIM, 0xffff, 0, 0xffff,0xffff,0x0,0x0,0xffff,0xffff,0xffff,0xffff,0x0,0xffff,0xf720,0xffff,0xffff,0xffff,0x0,0xcc68,0xffff,0x0,0x0,0x0,0x0,0xf720,0xffff,0xffff,0xffff,0xffff,0x5268,0x5268,0x0,0x0,0x0,0xffff,0xffff,0xffff,0xf720,0xffff,0xffff,0x5268,0x5268,0x5268,0xffff,0x5268,0x0,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0x5268,0x5268,0x5268,0x5268,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0x0,0xffff,0x0,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0x0,0x0,0xffde,0x0,0x0,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0x0,0x0,0xffff,0xffff,0xffff,0x0,0xffff,0xf720,0xffff,0xffff,0xffff,0xffff,0x0,0xcc68,0x0,0x0,0x0,0x0,0xffff,0xffff,0xf720,0xf720,0xffff,0xffff,0x5268,0x0,0x0,0x0,0xffff,0xffff,0xffff,0xf720,0xffff,0xffff,0xffff,0x5268,0x5268,0x5268,0xffff,0x0,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0x5268,0x5268,0x5268,0x5268,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0x0,0xffff,0x0,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0x0,0x0,0xffff,0x0,0x0,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff};
Image ennemyFire = Image(ennemyFireData);

const uint16_t ennemyRunData[] = {8,7,2, 3, 0xffff, 0, 0xffff,0xffff,0x0,0x0,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0x0,0xcc68,0xffff,0xffff,0xffff,0x0,0xffff,0x8c4d,0x5268,0x5268,0x0,0x0,0x0,0x0,0xffff,0x5268,0x5268,0x0,0x0,0x0,0xffff,0xffff,0xffff,0x5268,0x5268,0x5268,0x5268,0x0,0xffdf,0xfffe,0xffff,0x0,0xffff,0x0,0x0,0xffff,0xffff,0xffff,0x0,0x0,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0x0,0x0,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0x0,0xcc68,0xffff,0xffff,0xffff,0x0,0xffff,0xffff,0x5268,0x5268,0x0,0x0,0x0,0x0,0xffff,0x5268,0x5268,0x0,0x0,0x0,0xffff,0xffff,0xffff,0x5268,0x5268,0x5268,0x5268,0x0,0xffdf,0xffff,0x0,0x0,0xffff,0xffff,0x0,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0x0,0x0,0xffff,0xffff,0xffff};
Image ennemyRun = Image(ennemyRunData);

const uint16_t ennemyIdlData[] = {8,7,1, 0, 0xffff, 0, 0xffff,0xffff,0x0,0x0,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0x0,0xcc68,0xffff,0xffff,0xffff,0x0,0xffff,0x5268,0x5268,0x5268,0x0,0x0,0x0,0x0,0xffff,0x5268,0x5268,0x0,0x0,0x0,0xffff,0xffff,0xffff,0x5268,0x5268,0x5268,0x5268,0x0,0xffdf,0xfffe,0xffff,0x0,0xffff,0xffff,0x0,0xffff,0xffff,0xffff,0x0,0x0,0xffff,0x0,0x0,0xffff,0xffff,0xffff};
Image ennemyIdl = Image(ennemyIdlData);

boolean collideEnnemyAndBullets(Ennemies ennemy) 
{
  for(int i = 0 ; i< NB_PLAYER_BULLET; ++i){
    if(soldatBullet[i].life>0) {
      if(Collision(soldatBullet[i].x, soldatBullet[i].y, 2, 2, ennemy.x, ennemy.y, 5, 5)) {
        soldatBullet[i].life = 0;
        return true;
      }
    }
  }
  return false;
}

void initEnnemies()
{
   //init state
  for(int i = 0 ; i< NB_MAX_ENNEMIES; ++i) {
    ennemies[i].life = 1;
    ennemies[i].x = gb.display.width() + random(0,10); //first time we add ennemei randomly
    ennemies[i].y = random(0,gb.display.height());
    
    ennemies[i].fire = NB_FRAME_FIRE_ANIM;
    ennemies[i].isRun = false;
  }
}

void updateEnnemies()
{
  for(int i = 0 ; i< NB_MAX_ENNEMIES; ++i) {
   if(ennemies[i].life>0) {
    if(collideEnnemyAndBullets(ennemies[i])) {
      --ennemies[i].life; //we die
    }
    
    if (ennemies[i].fire>0) {
      --ennemies[i].fire;
    } else {
    //la method attend un pointeur sur ennemy nous envoyons donc le pointeur et non l objet directement
      actionEnnemy(&ennemies[i]);
    }
   }
  }
}

void drawEnnemies()
{
  gb.display.setColor(RED);
  for(int i = 0 ; i< NB_MAX_ENNEMIES; ++i) {
   if(ennemies[i].life>0) {
    if(ennemies[i].fire>0) {
      gb.display.drawImage( ennemies[i].x  , ennemies[i].y , ennemyFire, -12,7);
    } else if(ennemies[i].isRun == true){
      gb.display.drawImage( ennemies[i].x  , ennemies[i].y , ennemyRun,-8,7);
    } else {
      gb.display.drawImage( ennemies[i].x  , ennemies[i].y , ennemyIdl,-8,7);
    }
   }
  }
}


void actionEnnemy(Ennemies *ennemy)//nous utilison un pointer sur l objet afin de pouvoir modifier ses valeurs dans une fonction séparé
{
  
   int nextAction = random(0,100);

   if(nextAction < 3) {
    //fire 
    ennemy->fire = NB_FRAME_FIRE_ANIM;
    createNewEnnemyBullet(*ennemy); //send value in this method
   } else if(nextAction < 30) {
    --ennemy->x; //on avance
    ennemy->isRun = true;
   }
    
}

